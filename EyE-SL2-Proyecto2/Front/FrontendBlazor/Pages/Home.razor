@page "/"
@using FrontendBlazor.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>Bienvenidos a la Página del Grupo 19</PageTitle>

<h1 class="text-center my-4">Bienvenidos a la página del Grupo 19</h1>
<p class="text-center">¡Esta es una página interactiva donde podrás gestionar productos!</p>

@if (productos == null)
{
    <p><em>Cargando productos...</em></p>
}
else
{
    <div class="container mt-4">
        <button class="btn btn-success mb-3" @onclick="CrearProducto">Agregar Producto</button>
        <table class="table table-striped mt-3">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Nombre</th>
                    <th>Precio</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var producto in productos)
                {
                    <tr>
                        <td>@producto.Id</td>
                        <td>@producto.Nombre</td>
                        <td>@producto.Precio</td>
                        <td>
                            <button class="btn btn-primary" @onclick="() => EditarProducto(producto.Id)">Editar</button>
                            <button class="btn btn-danger" @onclick="() => EliminarProducto(producto.Id)">Eliminar</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private List<Producto> productos;

    // Cargar los productos desde la API
    protected override async Task OnInitializedAsync()
    {
        await CargarProductos();
    }

    private async Task CargarProductos()
    {
        try
        {
            productos = await Http.GetFromJsonAsync<List<Producto>>("https://localhost:7106/api/productos");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al cargar productos: {ex.Message}");
        }
    }

    // Redirigir al formulario de edición
    private void EditarProducto(int id)
    {
        NavigationManager.NavigateTo($"/producto/{id}");
    }

    // Eliminar un producto de la API
    private async Task EliminarProducto(int id)
    {
        try
        {
            await Http.DeleteAsync($"https://localhost:7106/api/productos/{id}");
            // Recargar la lista de productos después de eliminar uno
            await CargarProductos();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al eliminar producto: {ex.Message}");
        }
    }

    // Redirigir al formulario de creación
    private void CrearProducto()
    {
        NavigationManager.NavigateTo("/producto/0"); // Pasa el id 0 para indicar que es creación
    }
}
